{"version":3,"sources":["constants/actionTypes.js","components/FormControl.jsx","actions/action.js","components/ListTodo.jsx","components/CountTodos.jsx","components/Todos.jsx","components/TaskDones.jsx","components/AlreadyDone.jsx","App.js","reportWebVitals.js","reducer/todoItems.js","reducer/doneTasks.js","reducer/search.js","reducer/myReducer.js","index.js"],"names":["ADD_TODOS","DONE_TODOS","DELETE_TODO","MAKE_ALL_DONE","SEARCH","FormControl","props","onAddTask","event","a","target","name","value","type","checked","setState","onClear","complete","onSubmitHandle","preventDefault","onSaveTask","state","makeAllDone","onSearch","search","className","onSubmit","this","htmlFor","placeholder","onChange","id","onClick","Component","connect","dispatch","task","Types","Action","item","ListTodo","onDoneTask","CountTodos","items","count","filter","toLowerCase","includes","length","todoItems","Todos","todoListAll","console","log","tasks","todo","map","index","TaskDones","onDelete","onSendDelete","AlreadyDone","showTaskDones","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","idGenerator","S4","Math","random","toString","substring","findIndex","result","forEach","data","JSON","parse","localStorage","getItem","initialize","myReducer","types","newState","push","setItem","stringify","alert","splice","combineReducers","doneTasks","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1708ee6f.chunk.js","sourcesContent":["export const LIST_ALL_TODOS = 'LIST_ALL_TODOS';\nexport const ADD_TODOS = 'ADD_TODOS';\nexport const DONE_TODOS = 'DONE_TODOS';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const LIST_ALL_ALREADY_DONES = 'LIST_ALL_ALREADY_DONES';\nexport const MAKE_ALL_DONE = 'MAKE_ALL_DONE';\nexport const SEARCH = 'SEARCH';\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"./../actions/action\";\nclass FormControl extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            complete: false,\n            search: ''\n        };\n    }\n\n    onAddTask = async (event) => {\n        let target = event.target;\n        let name = target.name;\n        let value = target.type === \"checkbox\" ? target.checked : target.value;\n        await this.setState({\n            [name]: value,\n        });\n        // console.log(this.state);\n    };\n\n    onClear = () => {\n        this.setState({\n            name: \"\",\n            complete: false,\n        });\n    };\n\n    onSubmitHandle = async (event) => {\n        event.preventDefault();\n        await this.props.onSaveTask(this.state);\n        this.onClear();\n    };\n\n    makeAllDone = () => {\n        this.props.makeAllDone();\n    };\n\n    onSearch = async (event) => {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        await this.setState({\n            [name]: value,\n        });\n        \n        this.props.onSearch(this.state.search);\n    };\n\n    render() {\n        return (\n            <form className=\"form-group\" onSubmit={this.onSubmitHandle}>\n                <label htmlFor=\"name\" className=\"label label label-info\">\n                    Add Todo\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.name}\n                    className=\"form-control add-todo mb-10\"\n                    placeholder=\"Add todo\"\n                    onChange={this.onAddTask}\n                />\n                <button\n                    type=\"button\"\n                    id=\"checkAll\"\n                    className=\"btn btn-success\"\n                    onClick={this.makeAllDone}\n                >\n                    Mark all as done\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary mt-10 ml-10\"\n                    onClick={this.onAddTask}\n                >\n                    Add\n                </button>\n                <div className=\"mt-20\">\n                    <label htmlFor=\"search\" className=\"label label label-info\">\n                        Search\n                    </label>\n                    <input\n                        type=\"text\"\n                        name=\"search\"\n                        value={this.state.search}\n                        className=\"form-control add-todo\"\n                        placeholder=\"Search your todo...\"\n                        onChange={this.onSearch}\n                    />\n                </div>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onSaveTask: (task) => {\n            dispatch(Action.addTodoItems(task));\n        },\n        makeAllDone: () => {\n            dispatch(Action.makeAllDone());\n        },\n        onSearch: (item) => {\n            dispatch(Action.search(item));\n        },\n    };\n};\nexport default connect(null, mapDispatchToProps)(FormControl);\n","import * as Types from './../constants/actionTypes';\n\nexport const addTodoItems = (task) => {\n    return{\n        type: Types.ADD_TODOS,\n        task\n    } \n}\nexport const doneTask = (id) => {\n    return{\n        type: Types.DONE_TODOS,\n        id\n    } \n}\nexport const getDoneTask = () => {\n    return{\n        type: Types.LIST_ALL_ALREADY_DONES,\n    } \n}\nexport const deleteTask = (id) => {\n    return{\n        type: Types.DELETE_TODO,\n        id\n    } \n}\nexport const makeAllDone = () => {\n    return{\n        type: Types.MAKE_ALL_DONE,\n    } \n}\nexport const search = (item) => {\n    return{\n        type: Types.SEARCH,\n        item\n    } \n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"./../actions/action\";\nclass ListTodo extends Component {\n    onChange = (id) => {\n        this.props.onDoneTask(id);\n    };\n\n    render() {\n        let task = this.props;\n        // console.log(task);\n\n        return (\n            <ul id=\"sortable\" className=\"list-unstyled\">\n                <li className=\"ui-state-default\">\n                    <div className=\"checkbox\">\n                        <p onClick={() => this.onChange(task.id)}>\n                            <label>\n                                {/* <input\n                                    type=\"checkbox\"\n                                    onClick={() => this.onChange(task.id)}\n                                /> */}\n                                {task.name}\n                            </label>\n                        </p>\n                    </div>\n                </li>\n            </ul>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onDoneTask: (id) => {\n            dispatch(Action.doneTask(id));\n        },\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(ListTodo);\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\"\nclass CountTodos extends Component {\n    render() {\n        let {items, search} = this.props;\n        let listTodos = items.filter(task => {\n            return !task.complete && task.name.toLowerCase().includes(search)\n        })\n        let count = listTodos.length;\n        return (\n            <div className=\"todo-footer\">\n                <strong>\n                    <span className=\"count-todos\"></span>\n                </strong>\n                {count} Items Left\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        items: state.todoItems,\n        search: state.search\n    }\n}\n\nexport default connect(mapStateToProps, null)(CountTodos)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./../App.css\";\nimport FormControl from \"./FormControl\";\nimport ListTodo from \"./ListTodo\";\nimport CountTodos from \"./CountTodos\";\n\nclass Todos extends Component {\n   \n    \n    render() {\n        let { todoListAll, search } = this.props; \n        console.log(search);\n          \n        let todolist = todoListAll.filter(todo => !todo.complete && todo.name.toLowerCase().includes(search));\n        let tasks = todolist.map((task, index) => {\n            return (\n                <ListTodo\n                    key={index}\n                    id={task.id}\n                    name={task.name}\n                    complete={task.complete}\n                />\n            );\n        });\n\n        return (\n            <div className=\"col-md-6\">\n                <div className=\"todolist not-done\">\n                    <h1>Todos</h1>\n                    <FormControl/>\n                    <hr />\n                    {tasks }\n                    <CountTodos />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todoListAll: state.todoItems,\n        search: state.search\n    };\n};\n\nexport default connect(mapStateToProps, null)(Todos);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"./../actions/action\";\nclass TaskDones extends Component {\n    onDelete = (id) => {\n        this.props.onSendDelete(id);\n    };\n    render() {\n        let {task} = this.props;\n        // console.log(task);\n        \n        return (\n            <ul id=\"done-items\" className=\"list-unstyled\">\n                <li>\n                    {task.name}\n                    <button\n                        className=\"remove-item btn btn-default btn-xs pull-right\"\n                        onClick={() => this.onDelete(task.id)}\n                    >\n                        <span className=\"glyphicon glyphicon-remove\"></span>\n                    </button>\n                </li>\n            </ul>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onSendDelete: (id) => {\n            dispatch(Action.deleteTask(id));\n        },\n    };\n};\nexport default connect(null, mapDispatchToProps)(TaskDones);\n","import React, { Component } from \"react\";\nimport './../App.css'\nimport TaskDones from \"./TaskDones\"\nimport {connect} from \"react-redux\"\n\nclass AlreadyDone extends Component {\n    \n    render() {\n        let {tasks} = this.props;\n        let taskDone = tasks.filter(task => {\n            return task.complete\n        })\n        // console.log(taskDone);\n        \n        let showTaskDones = taskDone.map((task, index) => {\n            return <TaskDones key={index} task={task}/>\n        })\n        \n        return (\n            <div className=\"col-md-6\">\n                <div className=\"todolist\">\n                    <h1>Already Done</h1>\n                    {showTaskDones}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks : state.todoItems\n    }\n}\n\nexport default connect(mapStateToProps, null)(AlreadyDone)\n\n","import React, { Component } from 'react';\nimport Todos from './components/Todos';\nimport AlreadyDone from './components/AlreadyDone';\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Todos />\n                        <AlreadyDone />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from './../constants/actionTypes';\n\nfunction idGenerator() {\n    var S4 = function () {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\nfunction findIndex(state, id) {\n    // console.log(state, id);\n    let result;\n    state.forEach((item, index) => {\n        if (item.id === id) {\n            result = index;\n            return result;\n        }\n    })\n    return result\n}\nlet data = JSON.parse(localStorage.getItem('data'));\nlet initialize = data ? data : [];\n\nconst myReducer = (state = initialize, Action) => {\n    switch (Action.type) {\n        case types.ADD_TODOS: {\n            let newState = [...state];\n            if (Action.task.name) {\n                let task = {\n                    id: idGenerator(),\n                    name: Action.task.name,\n                    complete: Action.task.complete\n                }\n                newState.push(task);\n                localStorage.setItem('data', JSON.stringify(newState));\n                return newState;\n            } else {\n                alert('Please add your todo');\n            }\n            return newState;\n        }\n        case types.DONE_TODOS: {\n            let newState = [...state];\n            let index = findIndex(newState, Action.id);\n            // console.log(index);\n\n            newState[index] = {\n                ...newState[index],\n                complete: true\n            }\n            localStorage.setItem('data', JSON.stringify(newState));\n            // console.log(newState);\n            return newState;\n        }\n        case types.DELETE_TODO: {\n            let newState = [...state];\n            // console.log(newState);\n            let index = newState.findIndex(item => {\n                return item.id === Action.id\n            })\n            newState.splice(index, 1);\n            localStorage.setItem('data', JSON.stringify(newState));\n            return newState\n        }\n        case types.MAKE_ALL_DONE: {\n            let newState = [...state];\n            newState.map(item => {\n                return item.complete = true;\n            })\n            localStorage.setItem('data', JSON.stringify(newState));\n            return newState\n        }\n        default: {\n            let newState = [...state];\n            return newState\n        }\n\n    }\n}\nexport default myReducer","let data = JSON.parse(localStorage.getItem('data'));\nlet initialize = data ? data : [];\n\nconst myReducer = (state = initialize, Action) => {\n    switch (Action.type) {\n        default: {\n            let newState = [...state];\n            return newState\n        }\n\n    }\n}\nexport default myReducer","import * as types from './../constants/actionTypes';\n\n\nlet initialize = '';\n\nconst myReducer = (state = initialize, Action) => {\n    switch (Action.type) {\n        case types.SEARCH: {\n\n            return Action.item.toLowerCase()\n        }\n    default: return state\n\n    }\n}\nexport default myReducer","import { combineReducers } from 'redux';\nimport todoItems from './todoItems';\nimport doneTasks from './doneTasks';\nimport search from './search';\nconst myReducer = combineReducers({\n    todoItems,\n    doneTasks,\n    search\n});\n\nexport default myReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport myReducer from './reducer/myReducer';\n\nconst store = createStore(myReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}