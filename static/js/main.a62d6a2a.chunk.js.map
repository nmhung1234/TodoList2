{"version":3,"sources":["image/tick.svg","constants/actionTypes.js","components/AlreadyDone/TaskDones.jsx","actions/action.js","components/AlreadyDone/AlreadyDone.jsx","components/FormControl/FormControl.jsx","components/Container/Todos.jsx","components/TaskList/ListTodo.jsx","components/TaskList/CountTodos.jsx","components/TaskList/TaskList.jsx","components/Container/Footer.jsx","components/Clock/Clock.jsx","App.js","reportWebVitals.js","image/animationdelete.gif","image/trophy.gif","image/dance.gif","reducer/todoItems.js","reducer/doneTasks.js","reducer/search.js","reducer/editTask.js","reducer/myReducer.js","index.js"],"names":["ADD_TODOS","DONE_TODOS","DELETE_TODO","DELETE_ALL","MAKE_ALL_DONE","SEARCH","UNDO_TODO","EDIT_TASK","SORT","IMPORTANT_TASK","TaskDones","onDelete","id","props","onSendDelete","onUndo","task","this","className","timeadd","name","deadline","placement","title","color","mouseEnterDelay","onClick","Component","connect","dispatch","type","Types","Action","AlreadyDone","DeleteAll","deleteAll","taskDone","tasks","filter","complete","showTaskDones","map","index","state","todoItems","FormControl","onAddTask","event","a","date","Date","fulldateString","getHours","toString","getMinutes","getDate","getMonth","getFullYear","target","value","setState","onClear","onSubmitHandle","preventDefault","onSaveTask","onChange","dateString","replace","range","start","end","result","i","push","disabledDate","current","moment","startOf","search","nextProps","editTask","dateNow","day","month","year","onSubmit","htmlFor","placeholder","rows","defaultValue","showTime","Todos","src","logoIcon","alt","ListTodo","onImportant","important","onImportantTask","onDoneTask","onEditTask","CountTodos","items","count","toLowerCase","includes","length","TaskList","onSearch","sort","onSort","makeAllDone","todoListAll","tasksList","todo","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","item","Footer","rel","href","Clock","useState","timeString","setTimeString","useEffect","timeInterval","setInterval","now","hours","slice","minutes","seconds","getSeconds","formatTimeString","clearInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","idGenerator","S4","Math","random","substring","findIndex","forEach","data","JSON","parse","localStorage","getItem","initialize","myReducer","types","newState","trim","setItem","stringify","Swal","fire","width","padding","background","backdrop","position","icon","showConfirmButton","timer","splice","deltaskDone","showAleart","undefined","text","imageUrl","animationdelete","imageWidth","imageHeight","showAnimation","animationtrophy","animationdance","deadlinesort","newarr","split","letter","join","b","taskpre","taskaft","combineReducers","doneTasks","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a62d6a2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tick.0a36836f.svg\";","export const LIST_ALL_TODOS = 'LIST_ALL_TODOS';\r\nexport const ADD_TODOS = 'ADD_TODOS';\r\nexport const DONE_TODOS = 'DONE_TODOS';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_ALL = 'DELETE_ALL';\r\nexport const LIST_ALL_ALREADY_DONES = 'LIST_ALL_ALREADY_DONES';\r\nexport const MAKE_ALL_DONE = 'MAKE_ALL_DONE';\r\nexport const SEARCH = 'SEARCH';\r\nexport const UNDO_TODO = 'UNDO_TODO';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SORT = 'SORT';\r\nexport const IMPORTANT_TASK = 'IMPORTANT_TASK';\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../../actions/action\";\r\nimport './../../wraper.css';\r\nclass TaskDones extends Component {\r\n    onDelete = (id) => {\r\n        this.props.onSendDelete(id);\r\n    };\r\n    onUndo = (id) => {\r\n        this.props.onUndo(id);\r\n    };\r\n    render() {\r\n        let { task } = this.props;\r\n        // console.log(task);\r\n        return (\r\n            <div className=\"taskDoneColorText\">\r\n                <li className=\"flexdone animate__animated animate__flipInX\">\r\n                    {task.timeadd} <br />\r\n                    <span className=\"animate__bounceOutRight taskflex align\">\r\n                        {task.name} <br />\r\n                        Deadline: {task.deadline}\r\n                    </span>\r\n                    <span className=\"mt-10 align-self\">\r\n                    <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Return task\"\r\n                            color=\"#6c5ce7\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                            <button\r\n                                className=\"remove-item btn btn-primary btn-sm float-right\"\r\n                                onClick={() => this.onUndo(task.id)}\r\n                            >\r\n                                <span className=\"bi bi-arrow-counterclockwise\"></span>\r\n                            </button>\r\n                            </Tooltip>\r\n                        <Tooltip\r\n                            placement=\"bottomRight\"\r\n                            title=\"Permanently delete task\"\r\n                            color=\"red\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                        <button\r\n                            className=\"remove-item btn btn-danger btn-sm float-right mr-20\"\r\n                            onClick={() => this.onDelete(task.id)}\r\n                        >\r\n                            <span className=\"bi bi-x-circle\"></span>\r\n                        </button>\r\n                        </Tooltip>\r\n                    </span>\r\n                </li>\r\n\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSendDelete: (id) => {\r\n            dispatch(Action.deleteTask(id));\r\n        },\r\n        onUndo: (id) => {\r\n            dispatch(Action.undoTask(id));\r\n        },\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(TaskDones);\r\n","import * as Types from './../constants/actionTypes';\r\n\r\nexport const addTodoItems = (task) => {\r\n    return {\r\n        type: Types.ADD_TODOS,\r\n        task\r\n    }\r\n}\r\nexport const onEditTask = (task) => {\r\n    return {\r\n        type: Types.EDIT_TASK,\r\n        task\r\n    }\r\n}\r\nexport const doneTask = (id) => {\r\n    return {\r\n        type: Types.DONE_TODOS,\r\n        id\r\n    }\r\n}\r\nexport const getDoneTask = () => {\r\n    return {\r\n        type: Types.LIST_ALL_ALREADY_DONES,\r\n    }\r\n}\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type: Types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\nexport const deleteAll = () => {\r\n    return {\r\n        type: Types.DELETE_ALL,\r\n    }\r\n}\r\nexport const makeAllDone = () => {\r\n    return {\r\n        type: Types.MAKE_ALL_DONE,\r\n    }\r\n}\r\nexport const undoTask = (id) => {\r\n    return {\r\n        type: Types.UNDO_TODO,\r\n        id\r\n    }\r\n}\r\nexport const search = (item) => {\r\n    return {\r\n        type: Types.SEARCH,\r\n        item\r\n    }\r\n}\r\nexport const sort = (value) => {\r\n    return {\r\n        type: Types.SORT,\r\n        sort : value\r\n    }\r\n}\r\nexport const importantTask = (id) => {\r\n    return {\r\n        type: Types.IMPORTANT_TASK,\r\n        id\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport \"./../../App.css\";\r\nimport TaskDones from \"./TaskDones\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../../actions/action\";\r\nclass AlreadyDone extends Component {\r\n    DeleteAll = () => {\r\n        this.props.deleteAll();\r\n    };\r\n    render() {\r\n        let { tasks } = this.props;\r\n        let taskDone;\r\n        if (tasks) {\r\n            taskDone = tasks.filter((task) => {\r\n                return task.complete;\r\n            });\r\n        }\r\n        // console.log(taskDone);\r\n\r\n        let showTaskDones = taskDone.map((task, index) => {\r\n            return <TaskDones key={index} task={task} />;\r\n        });\r\n\r\n        return (\r\n            <div className=\"todolist rounded\">\r\n                <h1>Already Done</h1>\r\n                <p>\r\n                    <Tooltip\r\n                        placement=\"bottomLeft\"\r\n                        title=\"Delete all task done\"\r\n                        color=\"orange\"\r\n                        mouseEnterDelay='.5'\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={this.DeleteAll}\r\n                        >\r\n                            <span className=\"bi bi-trash mr-10\"></span>\r\n                            Delete All\r\n                        </button>\r\n                    </Tooltip>\r\n                </p>\r\n                <ul id=\"done-items\" className=\"list-unstyled\">\r\n                    {showTaskDones}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.todoItems,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        deleteAll: () => dispatch(Action.deleteAll()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlreadyDone);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../../actions/action\";\r\nimport { DatePicker, Tooltip } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport \"./../../App.css\";\r\nclass FormControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n            search: \"\",\r\n            timeadd: \"\",\r\n            deadline: \"\",\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        // console.log(nextProps.editTask);\r\n        this.setState({\r\n            id: nextProps.editTask.id,\r\n            name: nextProps.editTask.name,\r\n            deadline: nextProps.editTask.deadline,\r\n        });\r\n    }\r\n\r\n    onAddTask = async (event) => {\r\n        let date = new Date();\r\n        let fulldateString = `${date\r\n            .getHours()\r\n            .toString()}:${date\r\n            .getMinutes()\r\n            .toString()} - ${date.getDate().toString()}/ ${(\r\n            date.getMonth() + 1\r\n        ).toString()}/ ${date.getFullYear().toString()}`;\r\n        // console.log(fulldateString);\r\n\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        await this.setState({\r\n            [name]: value,\r\n            timeadd: fulldateString,\r\n        });\r\n        // console.log(this.state);\r\n    };\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n        });\r\n    };\r\n\r\n    onSubmitHandle = async (event) => {\r\n        event.preventDefault();\r\n        await this.props.onSaveTask(this.state);\r\n        this.onClear();\r\n    };\r\n\r\n    // ant\r\n    onChange = (value, dateString) => {\r\n        let deadline = dateString.replace(\" \", \" - \");\r\n        this.setState({\r\n            deadline: deadline,\r\n        });\r\n    };\r\n    range = (start, end) => {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    };\r\n    disabledDate = (current) => {\r\n        // Can not select days before today\r\n        return current && current < moment().startOf(\"day\");\r\n    };\r\n\r\n    render() {\r\n        let date = new Date();\r\n        let dateNow;\r\n        let day = date.getDate().toString();\r\n        let month = (date.getMonth() + 1).toString();\r\n        let year = date.getFullYear().toString();\r\n\r\n        // validate date\r\n        if (day < 10 && month > 10) {\r\n            dateNow = `${year}-${month}-${\"0\" + (day - 1)}`;\r\n        } else if (day > 10 && month < 10) {\r\n            dateNow = `${year}-${\"0\" + month}-${day - 1}`;\r\n        } else if (day < 10 && month < 10) {\r\n            dateNow = `${year}-${0 + month}-${\"0\" + (day - 1)}`;\r\n        } else {\r\n            dateNow = `${year}-${day}-${month}`;\r\n        }\r\n        // console.log(dateNow);\r\n        let { id } = this.state;\r\n        return (\r\n            <form className=\"form-group\" onSubmit={this.onSubmitHandle}>\r\n                {/* content */}\r\n\r\n                <label htmlFor=\"name\" className=\"badge badge-primary\">\r\n                    Add Todo\r\n                </label>\r\n                <textarea\r\n                    className=\"form-control add-todo rounded mb-1 pt-8\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    placeholder=\"📝 Add todo\"\r\n                    onChange={this.onAddTask}\r\n                    rows=\"3\"\r\n                />\r\n                {/* deadline */}\r\n                <label htmlFor=\"date\" className=\"badge badge-warning\">\r\n                    Deadline\r\n                </label>\r\n                <br />\r\n                {/* ant */}\r\n\r\n                <DatePicker\r\n                    name=\"date\"\r\n                    className=\"form-control rounded mb-10\"\r\n                    defaultValue={moment({ dateNow })}\r\n                    disabledDate={this.disabledDate}\r\n                    showTime\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n                <br />\r\n                {/* button */}\r\n                <Tooltip\r\n                    placement=\"right\"\r\n                    title={this.state.id ? \"UpdateTask\" : \"Add Task\"}\r\n                    color=\"cyan\"\r\n                    mouseEnterDelay=\".5\"\r\n                >\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary mt-10\"\r\n                        onClick={this.onAddTask}\r\n                    >\r\n                        <span className=\"bi bi-plus-circle mr-10\"></span>\r\n                        {id ? \"Update\" : \"Add\"}\r\n                    </button>\r\n                </Tooltip>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editTask: state.editTask,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSaveTask: (task) => {\r\n            dispatch(Action.addTodoItems(task));\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormControl);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./../../App.css\";\r\nimport logoIcon from \"./../../image/tick.svg\";\r\n\r\nimport AlreadyDone from \"../AlreadyDone/AlreadyDone\";\r\nimport FormControl from \"../FormControl/FormControl\";\r\nclass Todos extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"todolist not-done rounded\">\r\n                    <h1>\r\n                        {/* <span> */}\r\n                        <img className=\"logo\" src={logoIcon} alt=\"\" />\r\n                        {/* </span> */}\r\n                        Todo Tasks\r\n                    </h1>\r\n                    <FormControl />\r\n                </div>\r\n                <AlreadyDone />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../../actions/action\";\r\nimport \"./../../wraper.css\";\r\nclass ListTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            important: false\r\n        }\r\n    }\r\n\r\n    onImportant = async (id) => {\r\n\r\n        await this.setState({\r\n            id: id,\r\n            important: !this.state.important\r\n        })\r\n\r\n        this.props.onImportantTask(this.state.id);\r\n    }\r\n\r\n    onChange = (id) => {\r\n        this.props.onDoneTask(id);\r\n    };\r\n    editTask = (task) => {\r\n        this.props.onEditTask(task);\r\n    };\r\n    render() {\r\n        let {task} = this.props;\r\n        return (\r\n            <li className=\"list-group-item select animate__animated animate__flipInX\">\r\n                <div className=\"checkbox\">\r\n                    <div className=\"flex\">\r\n                        <p className=\"taskflex\">\r\n                            <label className=\"select\">{task.timeadd}</label> &emsp; \r\n                            <span \r\n                            className={task.important ? \"fas fa-star star animate__animated animate__tada\" : \"far fa-star starDefault\"} \r\n                            onClick={() => this.onImportant(task.id)}>\r\n\r\n                            </span>\r\n                            <br />\r\n                            &emsp;\r\n                            <label className=\"select align fw-700\">\r\n                                {task.name}\r\n                            </label>{\" \"}\r\n                            <br />\r\n                            <label className=\"mt-10 color-orange fw-500\">\r\n                                DeadLine: {task.deadline}\r\n                            </label>\r\n                        </p>\r\n\r\n                        <div className=\"flexresponsive\">\r\n                            <p\r\n                                className=\"bi bi-pencil-square select resize\"\r\n                                onClick={() => this.editTask(task)}\r\n                            />\r\n                            <p\r\n                                className=\"bi bi-check2-circle select resize\"\r\n                                onClick={() => this.onChange(task.id)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onDoneTask: (id) => {\r\n            dispatch(Action.doneTask(id));\r\n        },\r\n        onEditTask: (task) => {\r\n            dispatch(Action.onEditTask(task));\r\n        },\r\n        onImportantTask: (id) => {\r\n            dispatch(Action.importantTask(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListTodo);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nclass CountTodos extends Component {\r\n    render() {\r\n        let { items, search } = this.props;\r\n        let listTodos = items.filter((task) => {\r\n            return !task.complete && task.name.toLowerCase().includes(search);\r\n        });\r\n        let count = listTodos.length;\r\n        return (\r\n            <div className=\"todo-footer rounded-bottom mt-10\">\r\n                <strong>\r\n                    <span className=\"count-todos\"></span>\r\n                </strong>\r\n                {count > 1 ? count + \" Items Left\" : count + \" Item Left\" }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.todoItems,\r\n        search: state.search,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CountTodos);\r\n","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport ListTodo from \"./ListTodo\";\r\nimport CountTodos from \"./CountTodos\";\r\nimport * as Action from \"../../actions/action\";\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n            search: \"\",\r\n            timeadd: \"\",\r\n            deadline: \"\",\r\n            sort: \"\",\r\n        };\r\n    }\r\n\r\n    onSearch = async (event) => {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        await this.setState({\r\n            [name]: value,\r\n        });\r\n        this.props.onSearch(this.state.search);\r\n    };\r\n\r\n    sort = async (value) => {\r\n        if (value) {\r\n            await this.setState({\r\n                sort: value,\r\n            });\r\n            // console.log(this.state.sort);\r\n\r\n            this.props.onSort(this.state.sort);\r\n        }\r\n    };\r\n    makeAllDone = () => {\r\n        this.props.makeAllDone();\r\n    };\r\n    render() {\r\n        let { todoListAll, search } = this.props;\r\n        //  for show list\r\n        let todolist = todoListAll.filter(\r\n            (todo) => !todo.complete && todo.name.toLowerCase().includes(search)\r\n        );\r\n        let tasksList = todolist.map((task, index) => {\r\n            return <ListTodo key={index} task={task} />;\r\n        });\r\n        //----------------------\r\n\r\n        // for sortByDeadLine\r\n\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"todolist not-done rounded\">\r\n                    {/* search */}\r\n                    <div className=\"mt-20\">\r\n                        <label htmlFor=\"search\" className=\"badge badge-primary\">\r\n                            Search\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            value={this.state.search}\r\n                            className=\"form-control add-todo rounded mb-10\"\r\n                            placeholder=\"🔍 Search your todo...\"\r\n                            onChange={this.onSearch}\r\n                        />\r\n\r\n                        {/* button */}\r\n                        <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Make all as done\"\r\n                            color=\"magenta\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-success mr-10 mb-10\"\r\n                                onClick={this.makeAllDone}\r\n                            >\r\n                                <span className=\"bi bi-check-all mr-10\"></span>\r\n                                Done All\r\n                            </button>\r\n                        </Tooltip>\r\n                        {/* <div className=\"dropdown\"> */}\r\n                        <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Sort task\"\r\n                            color=\"gold\"\r\n                            mouseEnterDelay=\"1.5\"\r\n                        >\r\n                            <button\r\n                                className=\"btn btn-primary dropdown-toggle mb-10\"\r\n                                type=\"button\"\r\n                                id=\"dropdownMenu2\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                <span className=\"bi bi-filter-left mr-10\"></span>\r\n                                Sort By &nbsp;\r\n                            </button>\r\n                        </Tooltip>\r\n                        <div\r\n                            className=\"dropdown-menu sorttask\"\r\n                            aria-labelledby=\"dropdownMenu2\"\r\n                        >\r\n                            <button\r\n                                className={\r\n                                    this.state.sort === 1\r\n                                        ? \"dropdown-item active\"\r\n                                        : \"dropdown-item\"\r\n                                }\r\n                                type=\"button\"\r\n                                onClick={() => this.sort(1)}\r\n                            >\r\n                                DeadLine\r\n                            </button>\r\n                            <button\r\n                                className={\r\n                                    this.state.sort === 2\r\n                                        ? \"dropdown-item active\"\r\n                                        : \"dropdown-item\"\r\n                                }\r\n                                type=\"button\"\r\n                                onClick={() => this.sort(2)}\r\n                            >\r\n                                Importance\r\n                            </button>\r\n                        </div>\r\n                        {/* </div> */}\r\n\r\n                        {/* ------------------- */}\r\n                    </div>\r\n                    {tasksList}\r\n                    <CountTodos />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoListAll: state.todoItems,\r\n        search: state.search,\r\n        editTask: state.editTask,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSearch: (item) => {\r\n            dispatch(Action.search(item));\r\n        },\r\n        makeAllDone: () => {\r\n            dispatch(Action.makeAllDone());\r\n        },\r\n        onSort: (value) => {\r\n            dispatch(Action.sort(value));\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                Made with ❤️ by{\" \"}\r\n                <a\r\n                    rel=\"noreferrer\"\r\n                    href=\"https://github.com/nmhung1234/TodoList2/tree/dev\"\r\n                >\r\n                    @nmhung\r\n                </a>{\" \"}\r\n                &copy; 2021\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\n\r\nimport './style.css'\r\nfunction formatTimeString(now) {\r\n    let hours = `0${now.getHours()}`.slice(-2);\r\n    let minutes = `0${now.getMinutes()}`.slice(-2);\r\n    let seconds = `0${now.getSeconds()}`.slice(-2);\r\n    let date = now.getDate();\r\n    let month = now.getMonth() + 1;\r\n    let year = now.getFullYear();\r\n\r\n    return `${hours}:${minutes}:${seconds} - ${date} / ${month} / ${year}`;\r\n}\r\n\r\nfunction Clock() {\r\n    const [timeString, setTimeString] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let timeInterval = setInterval(() => {\r\n            const now = new Date();\r\n            const timeString = formatTimeString(now);\r\n            setTimeString(timeString);\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(timeInterval);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className=\"Clock\">{timeString}</p>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Todos from './components/Container/Todos';\r\nimport TaskList from './components/TaskList/TaskList';\r\nimport Footer from './components/Container/Footer';\r\nimport './wraper.css'\r\nimport Clock from './components/Clock/Clock';\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"wraper\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n                <Clock />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <TaskList />\r\n                        <Todos />\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/animationdelete.acda0393.gif\";","export default __webpack_public_path__ + \"static/media/trophy.bcdbe479.gif\";","export default __webpack_public_path__ + \"static/media/dance.11841c7a.gif\";","import * as types from './../constants/actionTypes';\r\nimport animationdelete from './../image/animationdelete.gif'\r\nimport animationtrophy from './../image/trophy.gif'\r\nimport animationdance from './../image/dance.gif'\r\nimport Swal from 'sweetalert2'\r\nfunction idGenerator() {\r\n    var S4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n}\r\nfunction findIndex(state, id) {\r\n    // console.log(state, id);\r\n    let result;\r\n    state.forEach((item, index) => {\r\n        if (item.id === id) {\r\n            result = index;\r\n            return result;\r\n        }\r\n    })\r\n    return result\r\n}\r\nlet data = JSON.parse(localStorage.getItem('data'));\r\nlet initialize = data ? data : [];\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.ADD_TODOS: {\r\n            let newState = [...state];\r\n            // console.log(Action.task);\r\n            if (Action.task.id !== '') {\r\n                let index = newState.findIndex(item => {\r\n                    return item.id === Action.task.id\r\n                })\r\n                let name = Action.task.name.trim();\r\n                if (!name) {\r\n                    Swal.fire('Please enter your Todo');\r\n                } else {\r\n                    newState[index] = {\r\n                        ...newState[index],\r\n                        name: name,\r\n                        deadline: Action.task.deadline,\r\n                    }\r\n                    localStorage.setItem('data', JSON.stringify(newState));\r\n                    return newState;\r\n                }\r\n                return newState;\r\n            } else {\r\n                if (Action.task.name.trim() && Action.task.id === '') {\r\n                    let task = {\r\n                        id: idGenerator(),\r\n                        name: Action.task.name,\r\n                        complete: Action.task.complete,\r\n                        timeadd: Action.task.timeadd,\r\n                        deadline: Action.task.deadline,\r\n                        important: false\r\n                    }\r\n                    newState.push(task);\r\n                    Swal.fire({\r\n                        title: 'Add todo Successfully',\r\n                        width: 600,\r\n                        padding: '3em',\r\n                        background: '#fff url(https://i.gifer.com/6ob.gif)',\r\n                        backdrop: `\r\n                          rgba(0,0,123,0.4)\r\n                          url(\"https://i.gifer.com/PYh.gif\")\r\n                          left top\r\n                          no-repeat\r\n                        `\r\n                    });\r\n                    localStorage.setItem('data', JSON.stringify(newState));\r\n                    return newState;\r\n                } else {\r\n                    Swal.fire('Please enter your Todo');\r\n                }\r\n                return newState;\r\n            }\r\n        }\r\n\r\n        case types.DONE_TODOS: {\r\n            let newState = [...state];\r\n            let index = findIndex(newState, Action.id);\r\n            // console.log(index);\r\n\r\n            newState[index] = {\r\n                ...newState[index],\r\n                complete: true\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            // console.log(newState);\r\n            return newState;\r\n        }\r\n        case types.DELETE_TODO: {\r\n            let newState = [...state];\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                width: '15rem',\r\n                icon: 'success',\r\n                title: 'Delete Successfully',\r\n                showConfirmButton: false,\r\n                timer: 1200\r\n            })\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            })\r\n            newState.splice(index, 1);\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.DELETE_ALL: {\r\n            let newState = [...state];\r\n            let deltaskDone = newState.filter(item => item.complete === false);\r\n            let showAleart = newState.filter(item => item.complete === true);\r\n            if (showAleart[0] === undefined) {\r\n                Swal.fire({\r\n                    title: 'Nothing to delete!',\r\n                    text: 'Have a nice day!',\r\n                    imageUrl: `${animationdelete}`,\r\n                    imageWidth: 280,\r\n                    imageHeight: 240\r\n                })\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    width: '20rem',\r\n                    icon: 'success',\r\n                    title: 'Little things make big days!',\r\n                    showConfirmButton: false,\r\n                    timer: 1700\r\n                })\r\n            };\r\n            localStorage.setItem('data', JSON.stringify(deltaskDone));\r\n            return deltaskDone\r\n        }\r\n        case types.MAKE_ALL_DONE: {\r\n            let newState = [...state];\r\n            let showAnimation = newState.filter(item => {\r\n                return item.complete === false;\r\n            })\r\n            if (!showAnimation[0]) {\r\n                Swal.fire({\r\n                    title: 'Relax timeee',\r\n                    text: 'No task today!',\r\n                    imageUrl: `${animationdance}`,\r\n                    imageWidth: 260,\r\n                    imageHeight: 280\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'Your Trophy',\r\n                    text: 'A winner never stops trying',\r\n                    imageUrl: `${animationtrophy}`,\r\n                    imageWidth: 400,\r\n                    imageHeight: 400\r\n                })\r\n            }\r\n\r\n            newState.map(item => {\r\n                return item.complete = true;\r\n            })\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.UNDO_TODO: {\r\n            let newState = [...state];\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            });\r\n            newState[index] = {\r\n                ...newState[index],\r\n                complete: false\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.IMPORTANT_TASK: {\r\n            let newState = [...state];\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            });\r\n\r\n            newState[index] = {\r\n                ...newState[index],\r\n                important: !newState[index].important\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.SORT: {\r\n            let newState = [...state];\r\n            \r\n            // add field for compare\r\n            newState.map(task => {\r\n                task.deadlinesort = task.deadline\r\n                return null\r\n            })\r\n            // console.log(newState);\r\n            if (Action.sort === 1) {\r\n                // convert deadline for compare\r\n                var newarr = newState.map(task => {\r\n                    let day = task.deadlinesort;\r\n                    let dayarr = day.split('');\r\n                    // console.log(dayarr);\r\n                    let filter = dayarr.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \" \"\r\n                    })\r\n                    filter = filter.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \"-\"\r\n                    })\r\n                    filter = filter.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \":\"\r\n                    })\r\n                    // return filter.join('')\r\n                    task.deadlinesort = filter.join('');\r\n                    return task\r\n                });\r\n                // console.log(newarr);\r\n                // sort as field dealinesort\r\n                newarr.sort((a, b) => {\r\n                    return a.deadlinesort - b.deadlinesort\r\n                });\r\n                // console.log(newarr);\r\n                newState = newarr;\r\n                // console.log(newState);\r\n                return newState\r\n            }else if(Action.sort === 2){\r\n                newState.sort((taskpre, taskaft) => {\r\n                    if(taskpre.important > taskaft.important){\r\n                        return -1;\r\n                    }else{\r\n                        return 1\r\n                    }\r\n                })\r\n                return newState\r\n            }\r\n\r\n        }\r\n        default: {\r\n            let newState = [...state];\r\n            return newState\r\n        }\r\n\r\n    }\r\n}\r\nexport default myReducer","let data = JSON.parse(localStorage.getItem('data'));\r\nlet initialize = data ? data : [];\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        default: {\r\n            let newState = [...state];\r\n            return newState\r\n        }\r\n\r\n    }\r\n}\r\nexport default myReducer","import * as types from './../constants/actionTypes';\r\n\r\n\r\nlet initialize = '';\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.SEARCH: {\r\n            return Action.item.toLowerCase()\r\n        }\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default myReducer","import * as types from './../constants/actionTypes';\r\n\r\nlet initialize = {\r\n    id: \"\",\r\n    name: \"\",\r\n    complete: false,\r\n    search: \"\",\r\n    timeadd: \"\",\r\n    deadline: \"\",\r\n}\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.EDIT_TASK: {\r\n            // console.log(Action.task);\r\n            return Action.task\r\n        }\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default myReducer","import { combineReducers } from 'redux';\r\nimport todoItems from './todoItems';\r\nimport doneTasks from './doneTasks';\r\nimport search from './search';\r\nimport editTask from './editTask';\r\n\r\nconst myReducer = combineReducers({\r\n    todoItems,\r\n    doneTasks,\r\n    search,\r\n    editTask,\r\n});\r\n\r\nexport default myReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport myReducer from './reducer/myReducer';\r\n\r\nconst store = createStore(myReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}