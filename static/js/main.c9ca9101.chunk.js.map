{"version":3,"sources":["constants/actionTypes.js","components/FormControl.jsx","actions/action.js","image/tick.svg","components/TaskDones.jsx","components/AlreadyDone.jsx","components/Todos.jsx","components/ListTodo.jsx","components/CountTodos.jsx","components/TaskList.jsx","components/Footer.jsx","App.js","reportWebVitals.js","image/animationdelete.gif","image/trophy.gif","image/dance.gif","reducer/todoItems.js","reducer/doneTasks.js","reducer/search.js","reducer/editTask.js","reducer/myReducer.js","index.js"],"names":["ADD_TODOS","DONE_TODOS","DELETE_TODO","DELETE_ALL","MAKE_ALL_DONE","SEARCH","UNDO_TODO","EDIT_TASK","SORT","IMPORTANT_TASK","FormControl","props","onAddTask","event","a","date","Date","fulldateString","getHours","toString","getMinutes","getDate","getMonth","getFullYear","target","name","value","setState","onClear","id","complete","onSubmitHandle","preventDefault","onSaveTask","state","onChange","dateString","deadline","replace","range","start","end","result","i","push","disabledDate","current","moment","startOf","search","timeadd","nextProps","this","editTask","dateNow","day","month","year","className","onSubmit","htmlFor","placeholder","rows","defaultValue","showTime","placement","title","color","mouseEnterDelay","type","onClick","Component","connect","dispatch","task","Types","Action","TaskDones","onDelete","onSendDelete","onUndo","AlreadyDone","DeleteAll","deleteAll","taskDone","tasks","filter","showTaskDones","map","index","todoItems","Todos","src","logoIcon","alt","ListTodo","onImportant","important","onImportantTask","onDoneTask","onEditTask","CountTodos","items","count","toLowerCase","includes","length","TaskList","onSearch","sort","onSort","makeAllDone","todoListAll","tasksList","todo","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","item","Footer","rel","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","idGenerator","S4","Math","random","substring","findIndex","forEach","data","JSON","parse","localStorage","getItem","initialize","myReducer","types","newState","trim","setItem","stringify","Swal","fire","width","padding","background","backdrop","position","icon","showConfirmButton","timer","splice","deltaskDone","showAleart","undefined","text","imageUrl","animationdelete","imageWidth","imageHeight","showAnimation","animationtrophy","animationdance","deadlinesort","newarr","split","letter","join","b","taskpre","taskaft","combineReducers","doneTasks","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9ca9101.chunk.js","sourcesContent":["export const LIST_ALL_TODOS = 'LIST_ALL_TODOS';\r\nexport const ADD_TODOS = 'ADD_TODOS';\r\nexport const DONE_TODOS = 'DONE_TODOS';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_ALL = 'DELETE_ALL';\r\nexport const LIST_ALL_ALREADY_DONES = 'LIST_ALL_ALREADY_DONES';\r\nexport const MAKE_ALL_DONE = 'MAKE_ALL_DONE';\r\nexport const SEARCH = 'SEARCH';\r\nexport const UNDO_TODO = 'UNDO_TODO';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SORT = 'SORT';\r\nexport const IMPORTANT_TASK = 'IMPORTANT_TASK';\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../actions/action\";\r\nimport { DatePicker, Tooltip } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport \"./../App.css\";\r\nclass FormControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n            search: \"\",\r\n            timeadd: \"\",\r\n            deadline: \"\",\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        // console.log(nextProps.editTask);\r\n        this.setState({\r\n            id: nextProps.editTask.id,\r\n            name: nextProps.editTask.name,\r\n            deadline: nextProps.editTask.deadline,\r\n        });\r\n    }\r\n\r\n    onAddTask = async (event) => {\r\n        let date = new Date();\r\n        let fulldateString = `${date\r\n            .getHours()\r\n            .toString()}:${date\r\n            .getMinutes()\r\n            .toString()} - ${date.getDate().toString()}/ ${(\r\n            date.getMonth() + 1\r\n        ).toString()}/ ${date.getFullYear().toString()}`;\r\n        // console.log(fulldateString);\r\n\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        await this.setState({\r\n            [name]: value,\r\n            timeadd: fulldateString,\r\n        });\r\n        // console.log(this.state);\r\n    };\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n        });\r\n    };\r\n\r\n    onSubmitHandle = async (event) => {\r\n        event.preventDefault();\r\n        await this.props.onSaveTask(this.state);\r\n        this.onClear();\r\n    };\r\n\r\n    // ant\r\n    onChange = (value, dateString) => {\r\n        let deadline = dateString.replace(\" \", \" - \");\r\n        this.setState({\r\n            deadline: deadline,\r\n        });\r\n    };\r\n    range = (start, end) => {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    };\r\n    disabledDate = (current) => {\r\n        // Can not select days before today\r\n        return current && current < moment().startOf(\"day\");\r\n    };\r\n\r\n    render() {\r\n        let date = new Date();\r\n        let dateNow;\r\n        let day = date.getDate().toString();\r\n        let month = (date.getMonth() + 1).toString();\r\n        let year = date.getFullYear().toString();\r\n\r\n        // validate date\r\n        if (day < 10 && month > 10) {\r\n            dateNow = `${year}-${month}-${\"0\" + (day - 1)}`;\r\n        } else if (day > 10 && month < 10) {\r\n            dateNow = `${year}-${\"0\" + month}-${day - 1}`;\r\n        } else if (day < 10 && month < 10) {\r\n            dateNow = `${year}-${0 + month}-${\"0\" + (day - 1)}`;\r\n        } else {\r\n            dateNow = `${year}-${day}-${month}`;\r\n        }\r\n        // console.log(dateNow);\r\n        let { id } = this.state;\r\n        return (\r\n            <form className=\"form-group\" onSubmit={this.onSubmitHandle}>\r\n                {/* content */}\r\n\r\n                <label htmlFor=\"name\" className=\"badge badge-primary\">\r\n                    Add Todo\r\n                </label>\r\n                <textarea\r\n                    className=\"form-control add-todo rounded mb-1 pt-8\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    placeholder=\"📝 Add todo\"\r\n                    onChange={this.onAddTask}\r\n                    rows=\"3\"\r\n                />\r\n                {/* deadline */}\r\n                <label htmlFor=\"date\" className=\"badge badge-warning\">\r\n                    Deadline\r\n                </label>\r\n                <br />\r\n                {/* ant */}\r\n\r\n                <DatePicker\r\n                    name=\"date\"\r\n                    className=\"form-control rounded mb-10\"\r\n                    defaultValue={moment({ dateNow })}\r\n                    disabledDate={this.disabledDate}\r\n                    showTime\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n                <br />\r\n                {/* button */}\r\n                <Tooltip\r\n                    placement=\"right\"\r\n                    title=\"Add Task\"\r\n                    color=\"cyan\"\r\n                    mouseEnterDelay=\".5\"\r\n                >\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary mt-10\"\r\n                        onClick={this.onAddTask}\r\n                    >\r\n                        <span className=\"bi bi-plus-circle mr-10\"></span>\r\n                        {id ? \"Update\" : \"Add\"}\r\n                    </button>\r\n                </Tooltip>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editTask: state.editTask,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSaveTask: (task) => {\r\n            dispatch(Action.addTodoItems(task));\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormControl);\r\n","import * as Types from './../constants/actionTypes';\r\n\r\nexport const addTodoItems = (task) => {\r\n    return {\r\n        type: Types.ADD_TODOS,\r\n        task\r\n    }\r\n}\r\nexport const onEditTask = (task) => {\r\n    return {\r\n        type: Types.EDIT_TASK,\r\n        task\r\n    }\r\n}\r\nexport const doneTask = (id) => {\r\n    return {\r\n        type: Types.DONE_TODOS,\r\n        id\r\n    }\r\n}\r\nexport const getDoneTask = () => {\r\n    return {\r\n        type: Types.LIST_ALL_ALREADY_DONES,\r\n    }\r\n}\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type: Types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\nexport const deleteAll = () => {\r\n    return {\r\n        type: Types.DELETE_ALL,\r\n    }\r\n}\r\nexport const makeAllDone = () => {\r\n    return {\r\n        type: Types.MAKE_ALL_DONE,\r\n    }\r\n}\r\nexport const undoTask = (id) => {\r\n    return {\r\n        type: Types.UNDO_TODO,\r\n        id\r\n    }\r\n}\r\nexport const search = (item) => {\r\n    return {\r\n        type: Types.SEARCH,\r\n        item\r\n    }\r\n}\r\nexport const sort = (value) => {\r\n    return {\r\n        type: Types.SORT,\r\n        sort : value\r\n    }\r\n}\r\nexport const importantTask = (id) => {\r\n    return {\r\n        type: Types.IMPORTANT_TASK,\r\n        id\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/tick.0a36836f.svg\";","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../actions/action\";\r\nimport './../wraper.css';\r\nclass TaskDones extends Component {\r\n    onDelete = (id) => {\r\n        this.props.onSendDelete(id);\r\n    };\r\n    onUndo = (id) => {\r\n        this.props.onUndo(id);\r\n    };\r\n    render() {\r\n        let { task } = this.props;\r\n        // console.log(task);\r\n        return (\r\n            <div className=\"taskDoneColorText\">\r\n                <li className=\"flexdone animate__animated animate__flipInX\">\r\n                    {task.timeadd} <br />\r\n                    <span className=\"animate__bounceOutRight taskflex align\">\r\n                        {task.name} <br />\r\n                        Deadline: {task.deadline}\r\n                    </span>\r\n                    <span className=\"mt-10 align-self\">\r\n                    <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Return task\"\r\n                            color=\"#6c5ce7\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                            <button\r\n                                className=\"remove-item btn btn-primary btn-sm float-right\"\r\n                                onClick={() => this.onUndo(task.id)}\r\n                            >\r\n                                <span className=\"bi bi-arrow-counterclockwise\"></span>\r\n                            </button>\r\n                            </Tooltip>\r\n                        <Tooltip\r\n                            placement=\"bottomRight\"\r\n                            title=\"Permanently delete task\"\r\n                            color=\"red\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                        <button\r\n                            className=\"remove-item btn btn-danger btn-sm float-right mr-20\"\r\n                            onClick={() => this.onDelete(task.id)}\r\n                        >\r\n                            <span className=\"bi bi-x-circle\"></span>\r\n                        </button>\r\n                        </Tooltip>\r\n                    </span>\r\n                </li>\r\n\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSendDelete: (id) => {\r\n            dispatch(Action.deleteTask(id));\r\n        },\r\n        onUndo: (id) => {\r\n            dispatch(Action.undoTask(id));\r\n        },\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(TaskDones);\r\n","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport \"./../App.css\";\r\nimport TaskDones from \"./TaskDones\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../actions/action\";\r\nclass AlreadyDone extends Component {\r\n    DeleteAll = () => {\r\n        this.props.deleteAll();\r\n    };\r\n    render() {\r\n        let { tasks } = this.props;\r\n        let taskDone;\r\n        if (tasks) {\r\n            taskDone = tasks.filter((task) => {\r\n                return task.complete;\r\n            });\r\n        }\r\n        // console.log(taskDone);\r\n\r\n        let showTaskDones = taskDone.map((task, index) => {\r\n            return <TaskDones key={index} task={task} />;\r\n        });\r\n\r\n        return (\r\n            <div className=\"todolist rounded\">\r\n                <h1>Already Done</h1>\r\n                <p>\r\n                    <Tooltip\r\n                        placement=\"bottomLeft\"\r\n                        title=\"Delete all task done\"\r\n                        color=\"orange\"\r\n                        mouseEnterDelay='.5'\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={this.DeleteAll}\r\n                        >\r\n                            <span className=\"bi bi-trash mr-10\"></span>\r\n                            Delete All\r\n                        </button>\r\n                    </Tooltip>\r\n                </p>\r\n                <ul id=\"done-items\" className=\"list-unstyled\">\r\n                    {showTaskDones}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.todoItems,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        deleteAll: () => dispatch(Action.deleteAll()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlreadyDone);\r\n","import React, { Component } from \"react\";\r\nimport \"./../App.css\";\r\nimport FormControl from \"./FormControl\";\r\nimport logoIcon from \"./../image/tick.svg\";\r\nimport AlreadyDone from \"./AlreadyDone\";\r\nclass Todos extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"todolist not-done rounded\">\r\n                    <h1>\r\n                        {/* <span> */}\r\n                        <img className=\"logo\" src={logoIcon} alt=\"\" />\r\n                        {/* </span> */}\r\n                        Todo Tasks\r\n                    </h1>\r\n                    <FormControl />\r\n                </div>\r\n                <AlreadyDone />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"./../actions/action\";\r\nimport \"./../wraper.css\";\r\nclass ListTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            important: false\r\n        }\r\n    }\r\n\r\n    onImportant = async (id) => {\r\n\r\n        await this.setState({\r\n            id: id,\r\n            important: !this.state.important\r\n        })\r\n\r\n        this.props.onImportantTask(this.state.id);\r\n    }\r\n\r\n    onChange = (id) => {\r\n        this.props.onDoneTask(id);\r\n    };\r\n    editTask = (task) => {\r\n        this.props.onEditTask(task);\r\n    };\r\n    render() {\r\n        let {task} = this.props;\r\n        return (\r\n            <li className=\"list-group-item select animate__animated animate__flipInX\">\r\n                <div className=\"checkbox\">\r\n                    <div className=\"flex\">\r\n                        <p className=\"taskflex\">\r\n                            <label className=\"select\">{task.timeadd}</label> &emsp; \r\n                            <span \r\n                            className={task.important ? \"fas fa-star star animate__animated animate__tada\" : \"far fa-star starDefault\"} \r\n                            onClick={() => this.onImportant(task.id)}>\r\n\r\n                            </span>\r\n                            <br />\r\n                            &emsp;\r\n                            <label className=\"select align fw-700\">\r\n                                {task.name}\r\n                            </label>{\" \"}\r\n                            <br />\r\n                            <label className=\"mt-10 color-orange fw-500\">\r\n                                DeadLine: {task.deadline}\r\n                            </label>\r\n                        </p>\r\n\r\n                        <div className=\"flexresponsive\">\r\n                            <p\r\n                                className=\"bi bi-pencil-square select resize\"\r\n                                onClick={() => this.editTask(task)}\r\n                            />\r\n                            <p\r\n                                className=\"bi bi-check2-circle select resize\"\r\n                                onClick={() => this.onChange(task.id)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onDoneTask: (id) => {\r\n            dispatch(Action.doneTask(id));\r\n        },\r\n        onEditTask: (task) => {\r\n            dispatch(Action.onEditTask(task));\r\n        },\r\n        onImportantTask: (id) => {\r\n            dispatch(Action.importantTask(id));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListTodo);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nclass CountTodos extends Component {\r\n    render() {\r\n        let { items, search } = this.props;\r\n        let listTodos = items.filter((task) => {\r\n            return !task.complete && task.name.toLowerCase().includes(search);\r\n        });\r\n        let count = listTodos.length;\r\n        return (\r\n            <div className=\"todo-footer rounded-bottom mt-10\">\r\n                <strong>\r\n                    <span className=\"count-todos\"></span>\r\n                </strong>\r\n                {count > 1 ? count + \" Items Left\" : count + \" Item Left\" }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.todoItems,\r\n        search: state.search,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CountTodos);\r\n","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport ListTodo from \"./ListTodo\";\r\nimport CountTodos from \"./CountTodos\";\r\nimport * as Action from \"./../actions/action\";\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            complete: false,\r\n            search: \"\",\r\n            timeadd: \"\",\r\n            deadline: \"\",\r\n            sort: \"\",\r\n        };\r\n    }\r\n\r\n    onSearch = async (event) => {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        await this.setState({\r\n            [name]: value,\r\n        });\r\n        this.props.onSearch(this.state.search);\r\n    };\r\n\r\n    sort = async (value) => {\r\n        if (value) {\r\n            await this.setState({\r\n                sort: value,\r\n            });\r\n            // console.log(this.state.sort);\r\n\r\n            this.props.onSort(this.state.sort);\r\n        }\r\n    };\r\n    makeAllDone = () => {\r\n        this.props.makeAllDone();\r\n    };\r\n    render() {\r\n        let { todoListAll, search } = this.props;\r\n        //  for show list\r\n        let todolist = todoListAll.filter(\r\n            (todo) => !todo.complete && todo.name.toLowerCase().includes(search)\r\n        );\r\n        let tasksList = todolist.map((task, index) => {\r\n            return <ListTodo key={index} task={task} />;\r\n        });\r\n        //----------------------\r\n\r\n        // for sortByDeadLine\r\n\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"todolist not-done rounded\">\r\n                    {/* search */}\r\n                    <div className=\"mt-20\">\r\n                        <label htmlFor=\"search\" className=\"badge badge-primary\">\r\n                            Search\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            value={this.state.search}\r\n                            className=\"form-control add-todo rounded mb-10\"\r\n                            placeholder=\"🔍 Search your todo...\"\r\n                            onChange={this.onSearch}\r\n                        />\r\n\r\n                        {/* button */}\r\n                        <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Make all as done\"\r\n                            color=\"magenta\"\r\n                            mouseEnterDelay=\".5\"\r\n                        >\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-success mr-10 mb-10\"\r\n                                onClick={this.makeAllDone}\r\n                            >\r\n                                <span className=\"bi bi-check-all mr-10\"></span>\r\n                                Done All\r\n                            </button>\r\n                        </Tooltip>\r\n                        {/* <div className=\"dropdown\"> */}\r\n                        <Tooltip\r\n                            placement=\"bottomLeft\"\r\n                            title=\"Sort task\"\r\n                            color=\"gold\"\r\n                            mouseEnterDelay=\"1.5\"\r\n                        >\r\n                            <button\r\n                                className=\"btn btn-primary dropdown-toggle mb-10\"\r\n                                type=\"button\"\r\n                                id=\"dropdownMenu2\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                <span className=\"bi bi-filter-left mr-10\"></span>\r\n                                Sort By &nbsp;\r\n                            </button>\r\n                        </Tooltip>\r\n                        <div\r\n                            className=\"dropdown-menu sorttask\"\r\n                            aria-labelledby=\"dropdownMenu2\"\r\n                        >\r\n                            <button\r\n                                className={\r\n                                    this.state.sort === 1\r\n                                        ? \"dropdown-item active\"\r\n                                        : \"dropdown-item\"\r\n                                }\r\n                                type=\"button\"\r\n                                onClick={() => this.sort(1)}\r\n                            >\r\n                                DeadLine\r\n                            </button>\r\n                            <button\r\n                                className={\r\n                                    this.state.sort === 2\r\n                                        ? \"dropdown-item active\"\r\n                                        : \"dropdown-item\"\r\n                                }\r\n                                type=\"button\"\r\n                                onClick={() => this.sort(2)}\r\n                            >\r\n                                Importance\r\n                            </button>\r\n                        </div>\r\n                        {/* </div> */}\r\n\r\n                        {/* ------------------- */}\r\n                    </div>\r\n                    {tasksList}\r\n                    <CountTodos />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoListAll: state.todoItems,\r\n        search: state.search,\r\n        editTask: state.editTask,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSearch: (item) => {\r\n            dispatch(Action.search(item));\r\n        },\r\n        makeAllDone: () => {\r\n            dispatch(Action.makeAllDone());\r\n        },\r\n        onSort: (value) => {\r\n            dispatch(Action.sort(value));\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                Made with ❤️ by{\" \"}\r\n                <a\r\n                    rel=\"noreferrer\"\r\n                    href=\"https://github.com/nmhung1234/TodoList2/tree/dev\"\r\n                >\r\n                    @nmhung\r\n                </a>{\" \"}\r\n                &copy; 2021\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Todos from './components/Todos';\r\nimport TaskList from './/components/TaskList';\r\nimport Footer from './components/Footer';\r\nimport './wraper.css'\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"wraper\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <TaskList />\r\n                        <Todos />\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/animationdelete.acda0393.gif\";","export default __webpack_public_path__ + \"static/media/trophy.bcdbe479.gif\";","export default __webpack_public_path__ + \"static/media/dance.11841c7a.gif\";","import * as types from './../constants/actionTypes';\r\nimport animationdelete from './../image/animationdelete.gif'\r\nimport animationtrophy from './../image/trophy.gif'\r\nimport animationdance from './../image/dance.gif'\r\nimport Swal from 'sweetalert2'\r\nfunction idGenerator() {\r\n    var S4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n}\r\nfunction findIndex(state, id) {\r\n    // console.log(state, id);\r\n    let result;\r\n    state.forEach((item, index) => {\r\n        if (item.id === id) {\r\n            result = index;\r\n            return result;\r\n        }\r\n    })\r\n    return result\r\n}\r\nlet data = JSON.parse(localStorage.getItem('data'));\r\nlet initialize = data ? data : [];\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.ADD_TODOS: {\r\n            let newState = [...state];\r\n            // console.log(Action.task);\r\n            if (Action.task.id !== '') {\r\n                let index = newState.findIndex(item => {\r\n                    return item.id === Action.task.id\r\n                })\r\n                let name = Action.task.name.trim();\r\n                if (!name) {\r\n                    Swal.fire('Please enter your Todo');\r\n                } else {\r\n                    newState[index] = {\r\n                        ...newState[index],\r\n                        name: name,\r\n                        deadline: Action.task.deadline,\r\n                    }\r\n                    localStorage.setItem('data', JSON.stringify(newState));\r\n                    return newState;\r\n                }\r\n                return newState;\r\n            } else {\r\n                if (Action.task.name.trim() && Action.task.id === '') {\r\n                    let task = {\r\n                        id: idGenerator(),\r\n                        name: Action.task.name,\r\n                        complete: Action.task.complete,\r\n                        timeadd: Action.task.timeadd,\r\n                        deadline: Action.task.deadline,\r\n                        important: false\r\n                    }\r\n                    newState.push(task);\r\n                    Swal.fire({\r\n                        title: 'Add todo Successfully',\r\n                        width: 600,\r\n                        padding: '3em',\r\n                        background: '#fff url(https://i.gifer.com/6ob.gif)',\r\n                        backdrop: `\r\n                          rgba(0,0,123,0.4)\r\n                          url(\"https://i.gifer.com/PYh.gif\")\r\n                          left top\r\n                          no-repeat\r\n                        `\r\n                    });\r\n                    localStorage.setItem('data', JSON.stringify(newState));\r\n                    return newState;\r\n                } else {\r\n                    Swal.fire('Please enter your Todo');\r\n                }\r\n                return newState;\r\n            }\r\n        }\r\n\r\n        case types.DONE_TODOS: {\r\n            let newState = [...state];\r\n            let index = findIndex(newState, Action.id);\r\n            // console.log(index);\r\n\r\n            newState[index] = {\r\n                ...newState[index],\r\n                complete: true\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            // console.log(newState);\r\n            return newState;\r\n        }\r\n        case types.DELETE_TODO: {\r\n            let newState = [...state];\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                width: '15rem',\r\n                icon: 'success',\r\n                title: 'Delete Successfully',\r\n                showConfirmButton: false,\r\n                timer: 1200\r\n            })\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            })\r\n            newState.splice(index, 1);\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.DELETE_ALL: {\r\n            let newState = [...state];\r\n            let deltaskDone = newState.filter(item => item.complete === false);\r\n            let showAleart = newState.filter(item => item.complete === true);\r\n            if (showAleart[0] === undefined) {\r\n                Swal.fire({\r\n                    title: 'Nothing to delete!',\r\n                    text: 'Have a nice day!',\r\n                    imageUrl: `${animationdelete}`,\r\n                    imageWidth: 280,\r\n                    imageHeight: 240\r\n                })\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    width: '20rem',\r\n                    icon: 'success',\r\n                    title: 'Little things make big days!',\r\n                    showConfirmButton: false,\r\n                    timer: 1700\r\n                })\r\n            };\r\n            localStorage.setItem('data', JSON.stringify(deltaskDone));\r\n            return deltaskDone\r\n        }\r\n        case types.MAKE_ALL_DONE: {\r\n            let newState = [...state];\r\n            let showAnimation = newState.filter(item => {\r\n                return item.complete === false;\r\n            })\r\n            if (!showAnimation[0]) {\r\n                Swal.fire({\r\n                    title: 'Relax timeee',\r\n                    text: 'No task today!',\r\n                    imageUrl: `${animationdance}`,\r\n                    imageWidth: 260,\r\n                    imageHeight: 280\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'Your Trophy',\r\n                    text: 'A winner never stops trying',\r\n                    imageUrl: `${animationtrophy}`,\r\n                    imageWidth: 400,\r\n                    imageHeight: 400\r\n                })\r\n            }\r\n\r\n            newState.map(item => {\r\n                return item.complete = true;\r\n            })\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.UNDO_TODO: {\r\n            let newState = [...state];\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            });\r\n            newState[index] = {\r\n                ...newState[index],\r\n                complete: false\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.IMPORTANT_TASK: {\r\n            let newState = [...state];\r\n            let index = newState.findIndex(item => {\r\n                return item.id === Action.id\r\n            });\r\n\r\n            newState[index] = {\r\n                ...newState[index],\r\n                important: !newState[index].important\r\n            }\r\n            localStorage.setItem('data', JSON.stringify(newState));\r\n            return newState\r\n        }\r\n        case types.SORT: {\r\n            let newState = [...state];\r\n            \r\n            // add field for compare\r\n            newState.map(task => {\r\n                task.deadlinesort = task.deadline\r\n                return null\r\n            })\r\n            // console.log(newState);\r\n            if (Action.sort === 1) {\r\n                // convert deadline for compare\r\n                var newarr = newState.map(task => {\r\n                    let day = task.deadlinesort;\r\n                    let dayarr = day.split('');\r\n                    // console.log(dayarr);\r\n                    let filter = dayarr.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \" \"\r\n                    })\r\n                    filter = filter.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \"-\"\r\n                    })\r\n                    filter = filter.filter(letter => {\r\n                        // console.log(letter);\r\n                        return letter !== \":\"\r\n                    })\r\n                    // return filter.join('')\r\n                    task.deadlinesort = filter.join('');\r\n                    return task\r\n                });\r\n                // console.log(newarr);\r\n                // sort as field dealinesort\r\n                newarr.sort((a, b) => {\r\n                    return a.deadlinesort - b.deadlinesort\r\n                });\r\n                // console.log(newarr);\r\n                newState = newarr;\r\n                // console.log(newState);\r\n                return newState\r\n            }else if(Action.sort === 2){\r\n                newState.sort((taskpre, taskaft) => {\r\n                    if(taskpre.important > taskaft.important){\r\n                        return -1;\r\n                    }else{\r\n                        return 1\r\n                    }\r\n                })\r\n                return newState\r\n            }\r\n\r\n        }\r\n        default: {\r\n            let newState = [...state];\r\n            return newState\r\n        }\r\n\r\n    }\r\n}\r\nexport default myReducer","let data = JSON.parse(localStorage.getItem('data'));\r\nlet initialize = data ? data : [];\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        default: {\r\n            let newState = [...state];\r\n            return newState\r\n        }\r\n\r\n    }\r\n}\r\nexport default myReducer","import * as types from './../constants/actionTypes';\r\n\r\n\r\nlet initialize = '';\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.SEARCH: {\r\n            return Action.item.toLowerCase()\r\n        }\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default myReducer","import * as types from './../constants/actionTypes';\r\n\r\nlet initialize = {\r\n    id: \"\",\r\n    name: \"\",\r\n    complete: false,\r\n    search: \"\",\r\n    timeadd: \"\",\r\n    deadline: \"\",\r\n}\r\n\r\nconst myReducer = (state = initialize, Action) => {\r\n    switch (Action.type) {\r\n        case types.EDIT_TASK: {\r\n            // console.log(Action.task);\r\n            return Action.task\r\n        }\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default myReducer","import { combineReducers } from 'redux';\r\nimport todoItems from './todoItems';\r\nimport doneTasks from './doneTasks';\r\nimport search from './search';\r\nimport editTask from './editTask';\r\n\r\nconst myReducer = combineReducers({\r\n    todoItems,\r\n    doneTasks,\r\n    search,\r\n    editTask,\r\n});\r\n\r\nexport default myReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport myReducer from './reducer/myReducer';\r\n\r\nconst store = createStore(myReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}